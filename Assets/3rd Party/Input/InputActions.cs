//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.3
//     from Assets/3rd Party/Input/InputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputActions"",
    ""maps"": [
        {
            ""name"": ""Main"",
            ""id"": ""1d2371ce-9f57-40b0-bcbb-9e0e38fc40b6"",
            ""actions"": [
                {
                    ""name"": ""PlayerMovement"",
                    ""type"": ""Value"",
                    ""id"": ""3b80f059-4e5e-421a-8259-ecf13ce0b892"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""FarSearch"",
                    ""type"": ""Button"",
                    ""id"": ""a3046d19-7d4e-4fb1-88fd-798c9870f815"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""InitiateAttack"",
                    ""type"": ""Button"",
                    ""id"": ""1e8b98f9-e1ca-470a-8670-48743fb21d6e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenPauseMenu"",
                    ""type"": ""Button"",
                    ""id"": ""86695a4b-5070-4e7c-86a4-2756d0f12ea3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NavigateMap"",
                    ""type"": ""Button"",
                    ""id"": ""ef649e13-7450-4b19-b2a2-0fa6d6c06f60"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector Keyboard"",
                    ""id"": ""177cae20-8630-40f7-89b6-02e87d4129be"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerMovement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""f6d7c5f6-f6db-4ef3-b93a-ef774ad94531"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard + Mouse"",
                    ""action"": ""PlayerMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""91e1653e-124e-41a7-b486-a5a78e6b8d79"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard + Mouse"",
                    ""action"": ""PlayerMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""b8d7b03f-9efa-4262-8942-8246c62b5bd2"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard + Mouse"",
                    ""action"": ""PlayerMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""16a6d51e-e291-4d72-bd62-6f4d4ec2ed1a"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard + Mouse"",
                    ""action"": ""PlayerMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""2bd045ad-cb98-4e3d-aa6b-81d5cdad2202"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerMovement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""36a3e424-00ed-4452-9243-8841e7b94597"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard + Mouse"",
                    ""action"": ""FarSearch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dbf2c5f7-75ec-473c-bee0-17abab9caf1c"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard + Mouse"",
                    ""action"": ""InitiateAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b57a4c29-643b-42b4-874d-8a864728e4d8"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard + Mouse"",
                    ""action"": ""OpenPauseMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""84ad8887-d671-43c7-ac43-3122e4ec44bb"",
                    ""path"": ""<Keyboard>/f1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard + Mouse"",
                    ""action"": ""OpenPauseMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""90845fab-6613-4ee8-adf1-af809ca8d2c2"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard + Mouse"",
                    ""action"": ""NavigateMap"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""PauseMenu"",
            ""id"": ""ef50788b-be12-4a6a-8585-e91d2e8b3f39"",
            ""actions"": [
                {
                    ""name"": ""ClosePauseMenu"",
                    ""type"": ""Button"",
                    ""id"": ""176731d1-1a95-48a5-81ed-206e2369b1ae"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""255d852d-76dc-4a48-ae49-e0a4fedcb5f7"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard + Mouse"",
                    ""action"": ""ClosePauseMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""88729ad4-b61f-4b37-a251-7d8c5ee7ed94"",
                    ""path"": ""<Keyboard>/f1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard + Mouse"",
                    ""action"": ""ClosePauseMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""MapNavigation"",
            ""id"": ""50361271-cc76-442e-98a2-046000a55033"",
            ""actions"": [
                {
                    ""name"": ""CloseMapNavigation"",
                    ""type"": ""Button"",
                    ""id"": ""ad7161c9-a4c0-4b58-bf80-ebe4aafa2b57"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MapNavigationMovement"",
                    ""type"": ""Value"",
                    ""id"": ""1f5facf6-60f1-4267-82f6-9acbad434849"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MapNavigationSpeedBoost"",
                    ""type"": ""Value"",
                    ""id"": ""271e524b-2b0b-4a3a-991d-27125c657119"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""21c52253-3aa6-443f-bd6e-c1d652429acd"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard + Mouse"",
                    ""action"": ""CloseMapNavigation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4eff306a-30a0-428e-aa95-f0394a65bcd0"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard + Mouse"",
                    ""action"": ""CloseMapNavigation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c7320b30-a6cb-4522-b8ea-47017b1f48bd"",
                    ""path"": ""<Keyboard>/f1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard + Mouse"",
                    ""action"": ""CloseMapNavigation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector Keyboard"",
                    ""id"": ""dc7d3d98-dc77-4fcc-98ca-2c8e02485764"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MapNavigationMovement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""704efdd2-f707-46fe-868a-6b65f50d0a90"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard + Mouse"",
                    ""action"": ""MapNavigationMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""aca19c17-1c6e-40f0-8a84-79d14c3d30cf"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard + Mouse"",
                    ""action"": ""MapNavigationMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""e5705ed5-5c42-4c80-bfc6-5ca1c3739d83"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard + Mouse"",
                    ""action"": ""MapNavigationMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""74157f8e-f769-4ada-83ec-50dde5f60db1"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard + Mouse"",
                    ""action"": ""MapNavigationMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""0232351c-146e-4508-8ded-b6b143e42ed1"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MapNavigationMovement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a691a18e-adbf-4daf-a43b-0d6d0fd03d83"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard + Mouse"",
                    ""action"": ""MapNavigationSpeedBoost"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard + Mouse"",
            ""bindingGroup"": ""Keyboard + Mouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Main
        m_Main = asset.FindActionMap("Main", throwIfNotFound: true);
        m_Main_PlayerMovement = m_Main.FindAction("PlayerMovement", throwIfNotFound: true);
        m_Main_FarSearch = m_Main.FindAction("FarSearch", throwIfNotFound: true);
        m_Main_InitiateAttack = m_Main.FindAction("InitiateAttack", throwIfNotFound: true);
        m_Main_OpenPauseMenu = m_Main.FindAction("OpenPauseMenu", throwIfNotFound: true);
        m_Main_NavigateMap = m_Main.FindAction("NavigateMap", throwIfNotFound: true);
        // PauseMenu
        m_PauseMenu = asset.FindActionMap("PauseMenu", throwIfNotFound: true);
        m_PauseMenu_ClosePauseMenu = m_PauseMenu.FindAction("ClosePauseMenu", throwIfNotFound: true);
        // MapNavigation
        m_MapNavigation = asset.FindActionMap("MapNavigation", throwIfNotFound: true);
        m_MapNavigation_CloseMapNavigation = m_MapNavigation.FindAction("CloseMapNavigation", throwIfNotFound: true);
        m_MapNavigation_MapNavigationMovement = m_MapNavigation.FindAction("MapNavigationMovement", throwIfNotFound: true);
        m_MapNavigation_MapNavigationSpeedBoost = m_MapNavigation.FindAction("MapNavigationSpeedBoost", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Main
    private readonly InputActionMap m_Main;
    private IMainActions m_MainActionsCallbackInterface;
    private readonly InputAction m_Main_PlayerMovement;
    private readonly InputAction m_Main_FarSearch;
    private readonly InputAction m_Main_InitiateAttack;
    private readonly InputAction m_Main_OpenPauseMenu;
    private readonly InputAction m_Main_NavigateMap;
    public struct MainActions
    {
        private @InputActions m_Wrapper;
        public MainActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @PlayerMovement => m_Wrapper.m_Main_PlayerMovement;
        public InputAction @FarSearch => m_Wrapper.m_Main_FarSearch;
        public InputAction @InitiateAttack => m_Wrapper.m_Main_InitiateAttack;
        public InputAction @OpenPauseMenu => m_Wrapper.m_Main_OpenPauseMenu;
        public InputAction @NavigateMap => m_Wrapper.m_Main_NavigateMap;
        public InputActionMap Get() { return m_Wrapper.m_Main; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MainActions set) { return set.Get(); }
        public void SetCallbacks(IMainActions instance)
        {
            if (m_Wrapper.m_MainActionsCallbackInterface != null)
            {
                @PlayerMovement.started -= m_Wrapper.m_MainActionsCallbackInterface.OnPlayerMovement;
                @PlayerMovement.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnPlayerMovement;
                @PlayerMovement.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnPlayerMovement;
                @FarSearch.started -= m_Wrapper.m_MainActionsCallbackInterface.OnFarSearch;
                @FarSearch.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnFarSearch;
                @FarSearch.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnFarSearch;
                @InitiateAttack.started -= m_Wrapper.m_MainActionsCallbackInterface.OnInitiateAttack;
                @InitiateAttack.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnInitiateAttack;
                @InitiateAttack.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnInitiateAttack;
                @OpenPauseMenu.started -= m_Wrapper.m_MainActionsCallbackInterface.OnOpenPauseMenu;
                @OpenPauseMenu.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnOpenPauseMenu;
                @OpenPauseMenu.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnOpenPauseMenu;
                @NavigateMap.started -= m_Wrapper.m_MainActionsCallbackInterface.OnNavigateMap;
                @NavigateMap.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnNavigateMap;
                @NavigateMap.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnNavigateMap;
            }
            m_Wrapper.m_MainActionsCallbackInterface = instance;
            if (instance != null)
            {
                @PlayerMovement.started += instance.OnPlayerMovement;
                @PlayerMovement.performed += instance.OnPlayerMovement;
                @PlayerMovement.canceled += instance.OnPlayerMovement;
                @FarSearch.started += instance.OnFarSearch;
                @FarSearch.performed += instance.OnFarSearch;
                @FarSearch.canceled += instance.OnFarSearch;
                @InitiateAttack.started += instance.OnInitiateAttack;
                @InitiateAttack.performed += instance.OnInitiateAttack;
                @InitiateAttack.canceled += instance.OnInitiateAttack;
                @OpenPauseMenu.started += instance.OnOpenPauseMenu;
                @OpenPauseMenu.performed += instance.OnOpenPauseMenu;
                @OpenPauseMenu.canceled += instance.OnOpenPauseMenu;
                @NavigateMap.started += instance.OnNavigateMap;
                @NavigateMap.performed += instance.OnNavigateMap;
                @NavigateMap.canceled += instance.OnNavigateMap;
            }
        }
    }
    public MainActions @Main => new MainActions(this);

    // PauseMenu
    private readonly InputActionMap m_PauseMenu;
    private IPauseMenuActions m_PauseMenuActionsCallbackInterface;
    private readonly InputAction m_PauseMenu_ClosePauseMenu;
    public struct PauseMenuActions
    {
        private @InputActions m_Wrapper;
        public PauseMenuActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @ClosePauseMenu => m_Wrapper.m_PauseMenu_ClosePauseMenu;
        public InputActionMap Get() { return m_Wrapper.m_PauseMenu; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PauseMenuActions set) { return set.Get(); }
        public void SetCallbacks(IPauseMenuActions instance)
        {
            if (m_Wrapper.m_PauseMenuActionsCallbackInterface != null)
            {
                @ClosePauseMenu.started -= m_Wrapper.m_PauseMenuActionsCallbackInterface.OnClosePauseMenu;
                @ClosePauseMenu.performed -= m_Wrapper.m_PauseMenuActionsCallbackInterface.OnClosePauseMenu;
                @ClosePauseMenu.canceled -= m_Wrapper.m_PauseMenuActionsCallbackInterface.OnClosePauseMenu;
            }
            m_Wrapper.m_PauseMenuActionsCallbackInterface = instance;
            if (instance != null)
            {
                @ClosePauseMenu.started += instance.OnClosePauseMenu;
                @ClosePauseMenu.performed += instance.OnClosePauseMenu;
                @ClosePauseMenu.canceled += instance.OnClosePauseMenu;
            }
        }
    }
    public PauseMenuActions @PauseMenu => new PauseMenuActions(this);

    // MapNavigation
    private readonly InputActionMap m_MapNavigation;
    private IMapNavigationActions m_MapNavigationActionsCallbackInterface;
    private readonly InputAction m_MapNavigation_CloseMapNavigation;
    private readonly InputAction m_MapNavigation_MapNavigationMovement;
    private readonly InputAction m_MapNavigation_MapNavigationSpeedBoost;
    public struct MapNavigationActions
    {
        private @InputActions m_Wrapper;
        public MapNavigationActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @CloseMapNavigation => m_Wrapper.m_MapNavigation_CloseMapNavigation;
        public InputAction @MapNavigationMovement => m_Wrapper.m_MapNavigation_MapNavigationMovement;
        public InputAction @MapNavigationSpeedBoost => m_Wrapper.m_MapNavigation_MapNavigationSpeedBoost;
        public InputActionMap Get() { return m_Wrapper.m_MapNavigation; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MapNavigationActions set) { return set.Get(); }
        public void SetCallbacks(IMapNavigationActions instance)
        {
            if (m_Wrapper.m_MapNavigationActionsCallbackInterface != null)
            {
                @CloseMapNavigation.started -= m_Wrapper.m_MapNavigationActionsCallbackInterface.OnCloseMapNavigation;
                @CloseMapNavigation.performed -= m_Wrapper.m_MapNavigationActionsCallbackInterface.OnCloseMapNavigation;
                @CloseMapNavigation.canceled -= m_Wrapper.m_MapNavigationActionsCallbackInterface.OnCloseMapNavigation;
                @MapNavigationMovement.started -= m_Wrapper.m_MapNavigationActionsCallbackInterface.OnMapNavigationMovement;
                @MapNavigationMovement.performed -= m_Wrapper.m_MapNavigationActionsCallbackInterface.OnMapNavigationMovement;
                @MapNavigationMovement.canceled -= m_Wrapper.m_MapNavigationActionsCallbackInterface.OnMapNavigationMovement;
                @MapNavigationSpeedBoost.started -= m_Wrapper.m_MapNavigationActionsCallbackInterface.OnMapNavigationSpeedBoost;
                @MapNavigationSpeedBoost.performed -= m_Wrapper.m_MapNavigationActionsCallbackInterface.OnMapNavigationSpeedBoost;
                @MapNavigationSpeedBoost.canceled -= m_Wrapper.m_MapNavigationActionsCallbackInterface.OnMapNavigationSpeedBoost;
            }
            m_Wrapper.m_MapNavigationActionsCallbackInterface = instance;
            if (instance != null)
            {
                @CloseMapNavigation.started += instance.OnCloseMapNavigation;
                @CloseMapNavigation.performed += instance.OnCloseMapNavigation;
                @CloseMapNavigation.canceled += instance.OnCloseMapNavigation;
                @MapNavigationMovement.started += instance.OnMapNavigationMovement;
                @MapNavigationMovement.performed += instance.OnMapNavigationMovement;
                @MapNavigationMovement.canceled += instance.OnMapNavigationMovement;
                @MapNavigationSpeedBoost.started += instance.OnMapNavigationSpeedBoost;
                @MapNavigationSpeedBoost.performed += instance.OnMapNavigationSpeedBoost;
                @MapNavigationSpeedBoost.canceled += instance.OnMapNavigationSpeedBoost;
            }
        }
    }
    public MapNavigationActions @MapNavigation => new MapNavigationActions(this);
    private int m_KeyboardMouseSchemeIndex = -1;
    public InputControlScheme KeyboardMouseScheme
    {
        get
        {
            if (m_KeyboardMouseSchemeIndex == -1) m_KeyboardMouseSchemeIndex = asset.FindControlSchemeIndex("Keyboard + Mouse");
            return asset.controlSchemes[m_KeyboardMouseSchemeIndex];
        }
    }
    public interface IMainActions
    {
        void OnPlayerMovement(InputAction.CallbackContext context);
        void OnFarSearch(InputAction.CallbackContext context);
        void OnInitiateAttack(InputAction.CallbackContext context);
        void OnOpenPauseMenu(InputAction.CallbackContext context);
        void OnNavigateMap(InputAction.CallbackContext context);
    }
    public interface IPauseMenuActions
    {
        void OnClosePauseMenu(InputAction.CallbackContext context);
    }
    public interface IMapNavigationActions
    {
        void OnCloseMapNavigation(InputAction.CallbackContext context);
        void OnMapNavigationMovement(InputAction.CallbackContext context);
        void OnMapNavigationSpeedBoost(InputAction.CallbackContext context);
    }
}
